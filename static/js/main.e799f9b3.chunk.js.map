{"version":3,"sources":["utils/MainApi.js","contexts/CurrentUserContext.js","components/ProtectedRoute/ProtectedRoute.js","components/Preloader/Preloader.js","components/Register/Register.js","components/Login/Login.js","images/landing-logo.svg","components/Main/Promo/Promo.js","components/Main/AboutProject/AboutProject.js","components/Main/Techs/Techs.js","images/vladimir.olegovich.JPG","components/Main/AboutMe/AboutMe.js","images/arrow.svg","components/Main/Portfolio/Portfolio.js","components/Main/Main.js","images/search-icon.svg","components/Movies/FilterCheckbox/FilterCheckbox.js","components/Movies/SearchForm/SearchForm.js","components/Movies/MoviesCard/MoviesCard.js","components/Movies/MoviesCardList/MoviesCardList.js","components/Movies/Movies.js","components/Movies/SavedMoviesCard/SavedMoviesCard.js","components/Movies/SavedMoviesCardList/SavedMoviesCardList.js","components/Movies/SavedMovies/SavedMovies.js","components/Profile/Profile.js","images/logo.svg","components/Navigation/Navigation.js","components/GamburgerMenu/GamburgerMenu.js","components/Header/Header.js","components/Footer/Footer.js","components/NotFound/NotFound.js","components/App/App.js","utils/MoviesApi.js","reportWebVitals.js","index.js"],"names":["BASE_URL","CurrentUserContext","React","createContext","ProtectedRoute","props","properties","isLogged","components","map","elem","index","key","String","createElement","path","Preloader","className","Register","useEffect","emailError","passwordError","nameError","setFormValid","isLoading","method","onSubmit","handlerRegisterSubmit","htmlFor","disabled","blockForm","onChange","e","nameHandler","onBlur","blurHandler","id","name","type","required","placeholder","nameInvalid","emailHandler","emailInvalid","passwordHandler","passwordInvalid","registerError","formValid","to","Login","handlerLoginSubmit","loginError","Promo","src","landingLogo","alt","AboutProject","Techs","AboutMe","href","target","MyPhoto","Portfolio","arrowImg","Main","FilterCheckbox","onClick","filterCheckBoxOn","setFilterCheckBoxOn","value","SearchForm","noValidate","onSearchMoviesFormSubmit","searchIcon","hadnlefilmInputSearchChange","filmInput","pattern","filmInputSearchInvalid","filmInputSearchError","MoviesCard","dislike","setAllMovies","allMovies","ind","card","liked","localStorage","setItem","JSON","stringify","like","setSavedMovies","savedMovies","trailerLink","image","url","nameEN","nameRU","dislikeMovie","likeMovie","min","hours","hoursRemnant","minutes","Math","ceil","movieDuration","duration","MoviesCardList","cards","length","cardsVisible","setLiked","errorFound","firstSearch","Movies","setIsOnSaved","setFilmInputSearchInvalid","setFilmInputSearchError","setCardsVisible","windowWidth","SavedMoviesCard","filter","SavedMoviesCardList","trailer","likedMovie","movieId","SavedMovies","Profile","setEditFormValid","currentUser","isEditing","email","editError","editMessage","handleEditProfileBtn","editFormValid","onSignOut","Navigation","handleChange","GamburgerMenu","useState","isGamMenuOpen","setIsGamMenuOpen","closeGamMenu","exact","Header","logo","Footer","NotFound","history","useHistory","goBack","App","isOnSaved","setCurrentUser","getItem","setIsLogged","setFirstSearch","setCards","setVisibleSavedMovies","setErrorFound","setIsLoading","setName","setEmail","password","setPassword","setNameInvalid","setEmailInvalid","setPasswordInvalid","setNameError","setEmailError","setPasswordError","setBlockForm","setLoginError","setRegisterError","setEditMessage","setEditError","setIsEditing","filmInputSearch","setFilmInputSearch","Dimensions","get","width","setWindowWidth","window","addEventListener","parse","getRequestedMovies","findFilms","films","filterMovies","test","toLowerCase","onRegister","fetch","headers","body","then","res","console","log","json","mainApi","data","push","message","catch","err","onLogin","token","filmReq","ok","Promise","reject","status","foundMovies","trim","includes","preventDefault","movie","func","country","director","year","description","savedMoviesT","savedMoviesList","Provider","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e799f9b3.chunk.js","sourcesContent":["// export const BASE_URL = 'https://api.movexp.students.nomoredomains.icu';\r\nexport const BASE_URL = 'http://localhost:4000';\r\n\r\n// signup — регистрация пользователя\r\nexport const register = (name, email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({name, email, password})\r\n  })\r\n  .then((res) => {\r\n    console.log(res)\r\n    return res.json();\r\n  })\r\n}\r\n\r\n// signin — авторизация пользователя\r\nexport const authorize = (email, password) => {\r\n  return fetch (`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify( { email, password }),\r\n  })\r\n  .then((res) => {\r\n    console.log(res)\r\n    return res.json()\r\n  })\r\n}\r\n\r\n// users/me - получение данных о пользователе\r\nexport const getContent = (token) => {\r\n  if (token) {\r\n    return fetch (`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        \"authorization\": `Bearer ${token}`\r\n      }\r\n    })\r\n    .then((res)=> {\r\n      return res.json()\r\n    })\r\n    .then((data) => {\r\n      return data\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  } else {\r\n    console.log(\"Token не найден\")\r\n  }\r\n}\r\n\r\n// Метод загрузки новых данных о пользователе на сервер\r\n//PATCH /users/me\r\nexport const editUserInfo = ({ name, email }, token) => {\r\n  return fetch (`${BASE_URL}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      \"authorization\": `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ name, email }),\r\n  })\r\n  .then((res) => {\r\n    return res.json();\r\n  })\r\n  .then((data) => {\r\n    return data;\r\n  })\r\n}\r\n\r\n// POST /movies - сохранение пользователем фильма\r\nexport const addMovieLike = (movie, token) => {\r\n  return fetch (`${BASE_URL}/movies`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      \"authorization\": `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      'country': movie.country,\r\n      'director': movie.director,\r\n      'duration': movie.duration,\r\n      'year': movie.year,\r\n      'description': movie.description,\r\n      'image': movie.image,\r\n      'trailerLink': movie.trailerLink,\r\n      'nameRU': movie.nameRU,\r\n      'nameEN': movie.nameEN,\r\n      'movieId': movie.id,\r\n    })\r\n  })\r\n  .then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n}\r\n\r\n// DELETE /movies - удаление пользователем фильма\r\nexport const removeMovieLike = (movieId, token) => {\r\n  return fetch(`${BASE_URL}/movies/${movieId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      \"Content-Type\": \"application/json\",\r\n      \"authorization\": `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n}","import React from 'react'\r\n\r\nexport const CurrentUserContext = React.createContext('');\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({...props}) => {\r\n\r\n  let properties = props.properties;\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.isLogged\r\n        ? props.components.map((elem, index)=>{\r\n            let props = {};\r\n            for (var key in properties[index]) {\r\n                props[String(key)]=properties[index][key];\r\n            }\r\n            return React.createElement(elem, props);\r\n          })\r\n        : <Redirect path=\"/signin\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;","import React from 'react'\r\nimport './Preloader.css'\r\n\r\n// компонент отвечает за работу прелоудера\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"preloader__container\">\r\n                <span className=\"preloader__round\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport './Register.css';\r\n\r\n// компонент страницы регистрации\r\nfunction Register (props) {\r\n\r\n  useEffect(() => {\r\n    if(props.emailError || props.passwordError || props.nameError) {\r\n      props.setFormValid(false)\r\n    } else {\r\n      props.setFormValid(true)\r\n    }\r\n  }, [props.emailError, props.passwordError, props.nameError])\r\n\r\n  return (\r\n    <section className='register'>\r\n      {props.isLoading === true ? <Preloader/> : \"\"}\r\n      <form className='register__form' method=\"POST\" onSubmit={props.handlerRegisterSubmit}>\r\n\r\n        <div className='register__form_container'>\r\n          <label className='register__form_label' htmlFor='name'>Имя</label>\r\n          <input className='register__form_input' disabled={props.blockForm} onChange={(e)=> props.nameHandler(e)} onBlur={(e)=> props.blurHandler(e)} id='name' name='name'  type='text' required placeholder='Введите имя' ></input>\r\n          {(props.nameInvalid && props.nameError) && <div className='register__form_input-error'>{props.nameError}</div>}\r\n        </div>\r\n\r\n        <div className='register__form_container'>\r\n          <label className='register__form_label' htmlFor='email'>E-mail</label>\r\n          <input className='register__form_input' disabled={props.blockForm} onChange={(e)=> props.emailHandler(e)} onBlur={(e)=> props.blurHandler(e)} id='email' name='email'  type='email' required placeholder='Введите почту' ></input>\r\n          {(props.emailInvalid && props.emailError) && <div className='register__form_input-error'>{props.emailError}</div>}\r\n        </div>\r\n\r\n        <div className='register__form_container'>\r\n          <label className='register__form_label' htmlFor='password'>Пароль</label>\r\n          <input className='register__form_input' disabled={props.blockForm} onChange={(e)=> props.passwordHandler(e)} onBlur={(e)=> props.blurHandler(e)} id='password' name='password'  type='password' required placeholder='Введите пароль'></input>\r\n          {(props.passwordInvalid && props.passwordError) && <div className='register__form_input-error'>{props.passwordError}</div>}\r\n        </div>\r\n\r\n        <div className='register__form_submit-container'>\r\n          {props.registerError !== \"\" ? <div className='register__form_submit-error'>{props.registerError}</div> : \"\"}\r\n          <button className='register__form_submit' type='submit' disabled={!props.formValid}>Зарегистироваться</button>\r\n          <h2 className='register__form_text'>Уже зарегистрированы?<Link to=\"/signin\" className=\"register__form_login\">Войти</Link></h2>\r\n        </div>\r\n\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Register;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport './Login.css';\r\n\r\n// компонент страницы авторизации\r\nfunction Login (props) {\r\n\r\n  useEffect(() => {\r\n    if(props.emailError || props.passwordError) {\r\n      props.setFormValid(false)\r\n    } else {\r\n      props.setFormValid(true)\r\n    }\r\n  }, [props.emailError, props.passwordError])\r\n\r\n  return (\r\n    <section className='login'>\r\n      {props.isLoading === true ? <Preloader/> : \"\"}\r\n      <form className='login__form' method=\"POST\" onSubmit={props.handlerLoginSubmit}>\r\n\r\n        <div className='login__form_container'>\r\n          <label className='login__form_label' htmlFor='email'>E-mail</label>\r\n          <input className='login__form_input' disabled={props.blockForm} onChange={(e)=> props.emailHandler(e)} onBlur={(e)=> props.blurHandler(e)} id='email' name='email' type='email' placeholder='Введите почту'></input>\r\n          {(props.emailInvalid && props.emailError) && <div className='login__form_input-error'>{props.emailError}</div>}\r\n        </div>\r\n\r\n        <div className='login__form_container'>\r\n          <label className='login__form_label' htmlFor='password'>Пароль</label>\r\n          <input className='login__form_input' disabled={props.blockForm} onChange={(e)=> props.passwordHandler(e)} onBlur={(e)=> props.blurHandler(e)} id='password' name='password' type='password' placeholder='Введите пароль'></input>\r\n          {(props.passwordInvalid && props.passwordError) && <div className='login__form_input-error'>{props.passwordError}</div>}\r\n        </div>\r\n\r\n        <div className='login__form_submit-container'>\r\n          {props.loginError !== \"\" ? <div className='login__form_submit-error'>{props.loginError}</div> : \"\"}\r\n          <button className='login__form_submit' type='submit' disabled={!props.formValid}>Войти</button>\r\n          <h2 className='login__form_text'>Еще не зарегистрированы?<Link to=\"/signup\" className=\"login__form_register\">Регистрация</Link></h2>\r\n        </div>\r\n\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/landing-logo.3446dc06.svg\";","import React from 'react';\r\nimport './Promo.css';\r\n\r\nimport landingLogo from '../../../images/landing-logo.svg';\r\n\r\n// компонент с вёрсткой баннера страницы «О проекте».\r\nfunction Promo () {\r\n  return (\r\n    <section className='promo'>\r\n      <div className='promo__container'>\r\n        <h1 className='promo__container_title'>Учебный проект студента факультета Веб-разработки</h1>\r\n        <p className='promo__container_text'>Листайте ниже, чтобы узнать больше про этот проект и его создателя</p>\r\n        <button className='promo__container_button'>Узнать больше</button>\r\n      </div>\r\n      <img className='promo__image' src={landingLogo} alt='Лого'></img>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Promo;\r\n","import React from 'react';\r\nimport './AboutProject.css';\r\n\r\n// компонент с описанием дипломного проекта\r\nfunction AboutProject () {\r\n  return (\r\n    <section className='about-project'>\r\n      <h2 className='about-project__title'>О проекте</h2>\r\n      <div className='about-project__stages'>\r\n        <h3 className='about-project__subtitle'>Дипломный проект включал 5 этапов</h3>\r\n        <p className='about-project__text'>Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.</p>\r\n      </div>\r\n      <div className='about-project__time'>\r\n        <h3 className='about-project__subtitle'>На выполнение диплома ушло 5 недель</h3>\r\n        <p className='about-project__text'>У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.</p>\r\n      </div>\r\n      <div className='about-project__timeline'>\r\n        <div className='about-project__backend'>\r\n          <p className='about-project__backend_subtitle'>1 неделя</p>\r\n          <p className='about-project__backend_text'>backend</p>\r\n        </div>\r\n        <div className='about-project__frontend'>\r\n          <p className='about-project__frontend_subtitle'>4 недели</p>\r\n          <p className='about-project__frontend_text'>frontend</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutProject;\r\n","import React from 'react';\r\nimport './Techs.css';\r\n\r\n// компонент с использованными технологиями\r\nfunction Techs () {\r\n  return (\r\n    <section className='techs'>\r\n      <h2 className='techs__title'>Технологии</h2>\r\n      <h3 className='techs__subtitle'>7 технологий</h3>\r\n      <p className='techs__text'>На курсе веб-разработки мы освоили технологии, которые применили в дипломном проекте.</p>\r\n      <div className='techs__container'>\r\n        <div className='techs__skill'>HTML</div>\r\n        <div className='techs__skill'>CSS</div>\r\n        <div className='techs__skill'>JS</div>\r\n        <div className='techs__skill'>React</div>\r\n        <div className='techs__skill'>Git</div>\r\n        <div className='techs__skill'>Express.js</div>\r\n        <div className='techs__skill'>mongoDB</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Techs;","export default __webpack_public_path__ + \"static/media/vladimir.olegovich.4aaea2ff.JPG\";","import React from 'react';\r\nimport './AboutMe.css';\r\nimport MyPhoto from '../../../images/vladimir.olegovich.JPG'\r\n\r\n// компонент с информацией о студенте\r\nfunction AboutMe () {\r\n  return (\r\n    <section className='aboutMe'>\r\n      <h2 className='aboutMe__title'>Студент</h2>\r\n      <div className='aboutMe__container'>\r\n        <div className='aboutMe__info'>\r\n          <h3 className='aboutMe__name'>Владимир</h3>\r\n          <h4 className='aboutMe__profession'>Фронтенд-разработчик, 31 год</h4>\r\n          <p className='abourMe__text'>\r\n            Я родился и живу в Москве. Женат.\r\n            Закончил Геодезический факультет МИИГАиК по специальности: \"Прикладная геодезия\".\r\n            Увлекаюсь спортом, шахматами, люблю прогулки на свежем воздухе, кино и компьютерные игры.\r\n            С 2013 года работал по професии.\r\n            В 2020 году начал обучение в Яндекс.Практикуме по специальности Веб-разработчик.\r\n          </p>\r\n          <div className='aboutMe__links'>\r\n            <a className='aboutMe__link' href='https://github.com/At0m234' target='/blank'>Github</a>\r\n            <a className='aboutMe__link' href='https://www.instagram.com/vladimir.olegovich90/' target='/blank'>Instagram</a>\r\n          </div>\r\n        </div>\r\n        <img className='aboutMe__photo' src={MyPhoto} alt='Владимир'></img>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutMe;","export default __webpack_public_path__ + \"static/media/arrow.54da24f4.svg\";","import React from 'react';\r\nimport './Portfolio.css'\r\nimport arrowImg from '../../../images/arrow.svg'\r\n\r\n// компонент со ссылками на другие проекты\r\nfunction Portfolio() {\r\n  return (\r\n    <section className='portfolio'>\r\n      <h2 className='portfolio__title'>Портфолио</h2>\r\n      <div className='portfolio__links'>\r\n        <a href='https://github.com/At0m234/how-to-learn-second' className='portfolio__link' target='/blank'>Статичный сайт<img src={arrowImg} alt='Стрелка'></img></a>\r\n        <a href='https://github.com/At0m234/russian-travel' className='portfolio__link' target='/blank'>Адаптивный сайт<img src={arrowImg} alt='Стрелка'></img></a>\r\n        <a href='https://github.com/At0m234/react-mesto-app' className='portfolio__link' target='/blank'>Одностраничное приложение<img src={arrowImg} alt='Стрелка'></img></a>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './Main.css';\r\n\r\nimport Promo from './Promo/Promo';\r\nimport AboutProject from './AboutProject/AboutProject';\r\nimport Techs from './Techs/Techs';\r\nimport AboutMe from './AboutMe/AboutMe';\r\nimport Portfolio from './Portfolio/Portfolio';\r\n\r\n// компонент страницы «О проекте». Он будет содержать только презентационные компоненты\r\nfunction Main () {\r\n  return (\r\n    <main className='main'>\r\n      <Promo/>\r\n      <AboutProject/>\r\n      <Techs/>\r\n      <AboutMe/>\r\n      <Portfolio/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","export default __webpack_public_path__ + \"static/media/search-icon.c7cf1b72.svg\";","import React from 'react';\r\nimport './FilterCheckbox.css';\r\n\r\n// фильтр с чекбоксом «Только короткометражки»\r\nfunction FilterCheckbox (props) {\r\n\r\n  function handleToggleFilterCheck(e){\r\n    if (props.filterCheckBoxOn) {\r\n      props.setFilterCheckBoxOn(false)\r\n    } else {\r\n      props.setFilterCheckBoxOn(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='filter-checkbox'>\r\n      <label className='filter-checkbox__container' htmlFor='checkbox'>\r\n        <input className='filter-checkbox_invisible' onClick={(e)=>{handleToggleFilterCheck(e)}} type=\"checkbox\" id='checkbox' value='Короткометражки'></input>\r\n        <span className=\"filter-checkbox_visible\"></span>\r\n        <span className='filter-checkbox_text'>Короткометражки</span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterCheckbox;","import React from 'react';\r\nimport './SearchForm.css';\r\nimport searchIcon from '../../../images/search-icon.svg';\r\nimport FilterCheckbox from '../FilterCheckbox/FilterCheckbox';\r\n\r\n\r\n// форма поиска, куда пользователь будет вводить запрос\r\nfunction SearchForm(props) {\r\n\r\n  return (\r\n    <form className='searchForm' noValidate onSubmit={props.onSearchMoviesFormSubmit}>\r\n      <div className='searchForm__container'>\r\n        <img className='searchForm__container_image' src={searchIcon} alt='Лупа'></img>\r\n        <input className='searchForm__container_input'\r\n          onBlur={e => props.blurHandler(e)}\r\n          onChange={e => props.hadnlefilmInputSearchChange(e)}\r\n          type='text'\r\n          placeholder='Фильм'\r\n          name='filmInput'\r\n          value={props.filmInput}\r\n          required\r\n          pattern=\"[A-Za-zА-Яа-яЁё0-9 -]{1,40}\">\r\n        </input>\r\n        <button className='searchForm__container_btn'></button>\r\n      </div>\r\n      {\r\n        (props.filmInputSearchInvalid && props.filmInputSearchError) && <div className='searchForm__container_input-error'>{props.filmInputSearchError}</div>\r\n      }\r\n      <hr className='searchForm__container_underline'></hr>\r\n      <FilterCheckbox\r\n        filterCheckBoxOn={props.filterCheckBoxOn}\r\n        setFilterCheckBoxOn={props.setFilterCheckBoxOn}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport './MoviesCard.css';\r\n\r\n// компонент одной карточки фильма\r\nfunction MoviesCard (props) {\r\n\r\n  function movieDuration(min) {\r\n    const hours = (min/60);\r\n    const hoursRemnant = ((min % 60) / 60);\r\n    const minutes = (min % 60);\r\n    const movieTime = Math.ceil(hours - hoursRemnant) + ' ч ' + minutes + ' м';\r\n    return movieTime;\r\n  }\r\n\r\n  function dislike() {\r\n    props.setAllMovies(props.allMovies.map((elem, ind) => {\r\n      if (props.card.id === elem.id) {\r\n        elem.liked = false;\r\n        return elem;\r\n      } else {\r\n        return elem;\r\n      }\r\n    }))\r\n    localStorage.setItem(\"allMovies\", JSON.stringify(props.allMovies))\r\n  }\r\n\r\n  function like() {\r\n    props.setAllMovies(props.allMovies.map((elem, ind) => {\r\n      if (props.card.id === elem.id) {\r\n        elem.liked = true;\r\n        return elem;\r\n      } else {\r\n        return elem;\r\n      }\r\n    }))\r\n\r\n    props.setSavedMovies(props.savedMovies.map((elem, ind) => {\r\n      if (props.card.id === elem.id) {\r\n        elem.liked = true;\r\n        return elem;\r\n      } else {\r\n        return elem;\r\n      }\r\n    }))\r\n    localStorage.setItem(\"savedMovies\", JSON.stringify(props.savedMovies))\r\n  }\r\n\r\n  return (\r\n    <div className='movies-card'>\r\n      <a href={props.card.trailerLink} target='/blank'><img className='movies-card__image' src={props.card.image.url ? props.card.image.url : \"\"} alt={props.card.nameEN}></img></a>\r\n      <div className='movies-card__container'>\r\n        <h2 className='movies-card__container_title'>{props.card.nameRU}</h2>\r\n        {\r\n          (\r\n          (props.card.liked && props.card.liked === true)\r\n          ? <button className='movies-card__container_btn movies-card__container_btn-liked' onClick={() => props.dislikeMovie(props.card, dislike)}></button>\r\n          : <button className='movies-card__container_btn movies-card__container_btn-like' onClick={() => props.likeMovie(props.card, like)}></button>\r\n\r\n          )\r\n        }\r\n      </div>\r\n      <p className='movies-card__duration'>{movieDuration(props.card.duration)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesCard;\r\n","import React from 'react';\r\nimport './MoviesCardList.css';\r\n\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\nimport Preloader from '../../Preloader/Preloader';\r\n\r\n// компонент, который управляет отрисовкой карточек фильмов на страницу и их количеством\r\nfunction MoviesCardList (props) {\r\n\r\n  return (\r\n    <div className='movies-card-list'>\r\n      {\r\n        (props.isLoading === true)\r\n          ? <Preloader/>\r\n          : (props.cards.length > 0)\r\n            ? props.cards.map((card, index) => {\r\n                if (index < props.cardsVisible)\r\n                  return <MoviesCard\r\n                    key={card.id}\r\n                    card={card}\r\n                    allMovies={props.allMovies}\r\n                    setAllMovies={props.setAllMovies}\r\n                    trailerLink={card.trailerLink}\r\n                    src={card.image.url}\r\n                    nameRU={card.nameRU}\r\n                    nameEN={card.nameEN}\r\n                    duration={card.duration}\r\n                    savedMovies={props.savedMovies}\r\n                    setSavedMovies={props.setSavedMovies}\r\n                    liked={props.liked}\r\n                    setLiked={props.setLiked}\r\n                    likeMovie={props.likeMovie}\r\n                    dislikeMovie={props.dislikeMovie}\r\n                  />\r\n            })\r\n            : (\r\n              (props.errorFound)\r\n              ? <h2 className='movies-card-list__error'>Во время запроса произошла ошибка.<br/>Возможно, проблема с соединением или сервер недоступен.<br/>Подождите немного и попробуйте ещё раз</h2>\r\n              : !props.firstSearch\r\n              ? \"\"\r\n              : (props.cards.length === 0)\r\n                ? <h2 className='movies-card-list__error'>Ничего не найдено</h2>\r\n                : \"\"\r\n            )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesCardList;\r\n","import React, {useEffect} from 'react';\r\nimport './Movies.css';\r\n\r\nimport SearchForm from './SearchForm/SearchForm';\r\nimport MoviesCardList from './MoviesCardList/MoviesCardList';\r\n\r\n// компонент страницы с поиском по фильмам\r\nfunction Movies (props) {\r\n\r\n  useEffect(()=>{\r\n    props.setIsOnSaved(false);\r\n  })\r\n\r\n  return (\r\n    <section className='movies'>\r\n        <SearchForm\r\n          hadnlefilmInputSearchChange={props.hadnlefilmInputSearchChange}\r\n          onSearchMoviesFormSubmit={props.onSearchMoviesFormSubmit}\r\n          filmInputSearchInvalid={props.filmInputSearchInvalid}\r\n          setFilmInputSearchInvalid={props.setFilmInputSearchInvalid}\r\n          filmInputSearchError={props.filmInputSearchError}\r\n          setFilmInputSearchError={props.setFilmInputSearchError}\r\n          filterCheckBoxOn={props.filterCheckBoxOn}\r\n          setFilterCheckBoxOn={props.setFilterCheckBoxOn}\r\n          blurHandler={props.blurHandler}\r\n        />\r\n        <MoviesCardList\r\n          cards={props.cards}\r\n          allMovies={props.allMovies}\r\n          setAllMovies={props.setAllMovies}\r\n          errorFound={props.errorFound}\r\n          cardsVisible={props.cardsVisible}\r\n          savedMovies={props.savedMovies}\r\n          setSavedMovies={props.setSavedMovies}\r\n          liked={props.liked}\r\n          setLiked={props.setLiked}\r\n          likeMovie={props.likeMovie}\r\n          dislikeMovie={props.dislikeMovie}\r\n          isLoading={props.isLoading}\r\n          firstSearch={props.firstSearch}\r\n        />\r\n        {\r\n          ((props.isLoading === false) && (props.cardsVisible < props.cards.length))\r\n            ? <div className='movies__container'>\r\n                <button className='movies__add-mov-btn'onClick={()=>{\r\n                  props.setCardsVisible (\r\n                    props.windowWidth > 1281\r\n                    ? props.cardsVisible + 4\r\n                    :  props.windowWidth > 1024 && props.windowWidth < 1280\r\n                      ? props.cardsVisible + 3\r\n                      : props.windowWidth > 481 && props.windowWidth < 1024\r\n                      ? props.cardsVisible + 2\r\n                      : props.windowWidth > 50 && props.windowWidth < 480\r\n                      ? props.cardsVisible + 2\r\n                      : props.card\r\n                  )\r\n                }}\r\n                >Ещё</button>\r\n              </div>\r\n            : \"\"\r\n        }\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\nimport './SavedMoviesCard.css';\r\n\r\n// компонент одной карточки фильма\r\nfunction SavedMoviesCard (props) {\r\n\r\n  function movieDuration(min) {\r\n    const hours = (min/60);\r\n    const hoursRemnant = ((min % 60) / 60);\r\n    const minutes = (min % 60);\r\n    const movieTime = Math.ceil(hours - hoursRemnant) + ' ч ' + minutes + ' м';\r\n    return movieTime;\r\n  }\r\n\r\n  function dislike() {\r\n    props.setSavedMovies(props.savedMovies.filter((elem, ind) => {\r\n      if (props.card.id !== elem.id) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }))\r\n    localStorage.setItem(\"savedMovies\", JSON.stringify(props.savedMovies));\r\n    props.setAllMovies(props.allMovies.map((elem, ind) => {\r\n      if (props.card.id === elem.id) {\r\n        elem.liked = false;\r\n        return elem;\r\n      } else {\r\n        return elem;\r\n      }\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className='saved-movies-card'>\r\n      <a href={props.card.trailerLink} target='/blank'><img className='saved-movies-card__image' src={props.card.image.url ? props.card.image.url : \"\"} alt={props.card.nameEN}></img></a>\r\n      <div className='saved-movies-card__container'>\r\n        <h2 className='saved-movies-card__container_title'>{props.card.nameRU}</h2>\r\n          <button className='saved-movies-card__container_btn saved-movies-card__container_btn-remove' onClick={() => props.dislikeMovie(props.card,dislike)}></button>\r\n      </div>\r\n      <p className='saved-movies-card__duration'>{movieDuration(props.card.duration)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedMoviesCard;\r\n","import React from 'react';\r\nimport './SavedMoviesCardList.css';\r\n\r\nimport SavedMoviesCard from '../SavedMoviesCard/SavedMoviesCard';\r\n\r\n// компонент, который управляет отрисовкой карточек фильмов на страницу и их количеством\r\nfunction SavedMoviesCardList (props) {\r\n  return (\r\n    <div className='saved-movies-card-list'>\r\n      {\r\n        (props.savedMovies.length > 0)\r\n        ? props.savedMovies.map((card) => {\r\n            return <SavedMoviesCard\r\n              key={card.movieId}\r\n              card={card}\r\n              trailer={card.trailerLink}\r\n              src={card.image}\r\n              nameRU={card.nameRU}\r\n              nameEN={card.nameEN}\r\n              duration={card.duration}\r\n              liked={props.liked}\r\n              likedMovie={props.likedMovie}\r\n              savedMovies={props.savedMovies}\r\n              allMovies={props.allMovies}\r\n              setAllMovies={props.setAllMovies}\r\n              setSavedMovies={props.setSavedMovies}\r\n              likeMovie={props.likeMovie}\r\n              dislikeMovie={props.dislikeMovie}\r\n            />\r\n          })\r\n          : <div className='saved-movies-card-list__message'>У Вас нет сохраненных фильмов</div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedMoviesCardList;\r\n","import React, {useEffect} from 'react';\r\nimport './SavedMovies.css';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport SavedMoviesCardList from '../SavedMoviesCardList/SavedMoviesCardList.js';\r\n\r\n// компонент страницы с сохранёнными карточками фильмов\r\nfunction SavedMovies (props) {\r\n  useEffect(()=>{\r\n    props.setIsOnSaved(true);\r\n  })\r\n  return (\r\n    <section className='saved-movies'>\r\n      <SearchForm\r\n        hadnlefilmInputSearchChange={props.hadnlefilmInputSearchChange}\r\n        onSearchMoviesFormSubmit={props.onSearchMoviesFormSubmit}\r\n        filmInputSearchInvalid={props.filmInputSearchInvalid}\r\n        setFilmInputSearchInvalid={props.setFilmInputSearchInvalid}\r\n        filmInputSearchError={props.filmInputSearchError}\r\n        setFilmInputSearchError={props.setFilmInputSearchError}\r\n        filterCheckBoxOn={props.filterCheckBoxOn}\r\n        setFilterCheckBoxOn={props.setFilterCheckBoxOn}\r\n        blurHandler={props.blurHandler}\r\n      />\r\n      <SavedMoviesCardList\r\n        cards={props.cards}\r\n        savedMovies={props.savedMovies}\r\n        setSavedMovies={props.setSavedMovies}\r\n        cardsVisible={props.cardsVisible}\r\n        setCardsVisible={props.setCardsVisible}\r\n        allMovies={props.allMovies}\r\n        setAllMovies={props.setAllMovies}\r\n\r\n        liked={props.liked}\r\n        setLiked={props.setLiked}\r\n        likeMovie={props.likeMovie}\r\n        dislikeMovie={props.dislikeMovie}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SavedMovies;","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\nimport './Profile.css';\r\n\r\n// компонент страницы изменения профиля\r\nfunction Profile (props) {\r\n\r\n  useEffect(() => {\r\n    props.setEditFormValid(true)\r\n  }, [props.emailError, props.nameError])\r\n\r\n  return (\r\n    <section className='profile'>\r\n      <h1 className='profile__greeting-title'>{'Привет, ' + props.currentUser.name + '!'}</h1>\r\n\r\n        <form className='profile__info'>\r\n          <p className='profile__info_text'>Имя</p>\r\n          { (props.isEditing)\r\n          ? <input className='profile__info_user' onChange={(e) => {props.nameHandler(e)}} onBlur={e => props.blurHandler(e)} name='name'></input>\r\n          : <input className='profile__info_user' disabled={true} onBlur={e => props.blurHandler(e)} name='name' value={props.currentUser.name} />\r\n          }\r\n          <div></div>\r\n          {(props.nameInvalid && props.nameError) && <div className='profile__info_user-error'>{props.nameError}</div>}\r\n        </form>\r\n\r\n        <hr className='profile__info_line'></hr>\r\n\r\n        <form className='profile__info'>\r\n          <p className='profile__info_text'>Почта</p>\r\n          { (props.isEditing)\r\n          ? <input className='profile__info_user' onChange={(e) => {props.emailHandler(e)}} onBlur={e => props.blurHandler(e)} name='email'></input>\r\n          : <input className='profile__info_user' disabled={true} onBlur={e => props.blurHandler(e)} name='email' value={props.currentUser.email} />\r\n          }\r\n          <div></div>\r\n          {(props.emailInvalid && props.emailError) && <div className='profile__info_user-error'>{props.emailError}</div>}\r\n        </form>\r\n        {props.isLoading === true ? <Preloader/> : \"\"}\r\n        {props.editError === true ? <div className='profile__info_submit-error'>{props.editMessage}</div> : <div className='profile__info_submit-success'>{props.editMessage}</div>}\r\n        <button className='profile__edit-btn' onClick={props.handleEditProfileBtn} disabled={!props.editFormValid}>{props.isEditing ? 'Сохранить' : 'Редактировать'}</button>\r\n        <NavLink to='/' className='profile__signout-btn' onClick={props.onSignOut}>Выйти из аккаунта</NavLink>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile;","export default __webpack_public_path__ + \"static/media/logo.5e99a335.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n// компонент, который отвечает за меню навигации на сайте\r\nfunction Navigation (props) {\r\n\r\n  function handleChange(e) {\r\n    props.setFilterCheckBoxOn(false)\r\n  }\r\n  \r\n  return (\r\n    <nav className='navigation'>\r\n      <NavLink to='/movies' className='navigation__link' onClick={(e) => {handleChange(e)}} >Фильмы</NavLink>\r\n      <NavLink to='/saved-movies' className='navigation__link'  onClick={(e) => {handleChange(e)}}>Сохранённые фильмы</NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React, {useState} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './GamburgerMenu.css';\r\n\r\n// компонент меню, открывающегося по клику на кнопку \"гамбургер\"\r\nfunction GamburgerMenu () {\r\n  const [isGamMenuOpen, setIsGamMenuOpen] = useState(false);\r\n\r\n  function openGamMenu () {\r\n    setIsGamMenuOpen(true);\r\n  }\r\n\r\n  function closeGamMenu() {\r\n    setIsGamMenuOpen(false)\r\n  }\r\n\r\n  if (isGamMenuOpen === false) {\r\n    return (\r\n      <div className='gamburger-menu'>\r\n        <button className='gamburger-menu__btn' onClick={openGamMenu}>\r\n          <span></span>\r\n        </button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='gamburger-menu'>\r\n        <div className='gamburger-menu__container gamburger-menu__container_overlay' onClick={closeGamMenu}>\r\n          <nav className='gamburger-menu__links gamburger-menu__links_active'>\r\n              <NavLink className='gamburger-menu__link' exact to='/' onClick={closeGamMenu}>Главная</NavLink>\r\n              <NavLink className='gamburger-menu__link' to='/movies' onClick={closeGamMenu}>Фильмы</NavLink>\r\n              <NavLink className='gamburger-menu__link' to='/saved-movies' onClick={closeGamMenu}>Сохраненные фильмы</NavLink>\r\n              <NavLink className='gamburger-menu__link' to='/profile' onClick={closeGamMenu}><button className='gamburger-menu__link_btn'></button></NavLink>\r\n          </nav>\r\n        </div>\r\n        <button className='gamburger-menu__btn gamburger-menu__btn_active' onClick={closeGamMenu}>\r\n          <span></span>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GamburgerMenu;","import React, { useEffect } from 'react';\r\nimport { Switch, Route, Link, NavLink } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nimport logo from '../../images/logo.svg';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport GamburgerMenu from '../GamburgerMenu/GamburgerMenu';\r\n\r\n// компонент, который отрисовывает шапку сайта на страницу\r\nfunction Header(props) {\r\n  useEffect(() => {\r\n  },[props.windowWidth])\r\n\r\n  return (\r\n    <header className='header'>\r\n        {\r\n        (props.isLogged === true)\r\n        ? <Switch>\r\n            <Route path='/'>\r\n              <div className='header__profile-container'>\r\n                <Link to='/'><img className='header__logo' src={logo} alt='Логотип'></img></Link>\r\n                <Navigation\r\n                setFilterCheckBoxOn={props.setFilterCheckBoxOn}\r\n                />\r\n                {\r\n                  (props.windowWidth === 1279 || props.windowWidth < 1279)\r\n                  ? <GamburgerMenu/>\r\n                  : <NavLink to='/profile'className='gamburger-menu__link_btn'></NavLink>\r\n                }\r\n              </div>\r\n            </Route>\r\n\r\n          </Switch>\r\n        :\r\n          <Switch>\r\n\r\n            <Route exact path='/'>\r\n              <div className='header__main-container'>\r\n                <Link to='/'><img className='header__logo' src={logo} alt='Логотип'></img></Link>\r\n                <div className='header__btns_container'>\r\n                  <NavLink to='/signup' className='header__register'>Регистрация</NavLink>\r\n                  <NavLink to='/signin' className='header__login'>Войти</NavLink>\r\n                </div>\r\n              </div>\r\n            </Route>\r\n\r\n            <Route exact path='/signup'>\r\n              <div className='header__sign-container'>\r\n                <Link to='/'><img className='header__logo' src={logo} alt='Логотип'></img></Link>\r\n                <h1 className='header__sign-title_text'>Добро пожаловать!</h1>\r\n              </div>\r\n            </Route>\r\n\r\n            <Route exact path='/signin'>\r\n              <div className='header__sign-container'>\r\n                <Link to='/'><img className='header__logo' src={logo} alt='Логотип'></img></Link>\r\n                <h1 className='header__sign-title_text'>Рады видеть!</h1>\r\n              </div>\r\n            </Route>\r\n          </Switch>\r\n        }\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css'\r\n\r\n// презентационный компонент, который отрисовывает подвал\r\nfunction Footer () {\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='footer__info'>\r\n        <h2 className='footer__title'>Учебный проект Яндекс.Практикум х BeatFilm.</h2>\r\n        <div className='footer__container'>\r\n        <h3 className='footer__author'>Ильин Владимир Олегович &copy;2021</h3>\r\n          <nav className='footer__links'>\r\n            <a className='footer__link' href='https://praktikum.yandex.ru/' target='/black'>Яндекс.Практикум</a>\r\n            <a className='footer__link' href='https://github.com/At0m234' target='/black'>Github</a>\r\n            <a className='footer__link' href='https://www.instagram.com/vladimir.olegovich90/' target='/black'>Instagram</a>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\n// компонент страницы «Страница не найдена». Он будет содержать 404 ошибку при попытке перейти на несуществующую страницу\r\nfunction NotFound () {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className='not-found'>\r\n      <h1 className='not-found__error'>404</h1>\r\n      <h2 className='not-found__text'>Страница не найдена</h2>\r\n      <button className='not-found__submit' type='submit' onClick={() => history.goBack()}>Назад</button>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom';\r\nimport { Dimensions } from 'react-native';\r\nimport './App.css';\r\n\r\n\r\nimport * as mainApi from '../../utils/MainApi';\r\nimport * as moviesApi from '../../utils/MoviesApi';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport Register from '../Register/Register';\r\nimport Login from '../Login/Login';\r\nimport Main from '../Main/Main';\r\nimport Movies from '../Movies/Movies';\r\nimport SavedMovies from '../Movies/SavedMovies/SavedMovies';\r\nimport Profile from '../Profile/Profile';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\nimport NotFound from '../NotFound/NotFound';\r\n\r\nfunction App() {\r\n  const [isOnSaved, setIsOnSaved] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [isLogged, setIsLogged] = useState(localStorage.getItem('token') ? true : false);\r\n  const [firstSearch, setFirstSearch] = useState(false);\r\n\r\n  // ---------- КАРТОЧКИ ФИЛЬМОВ ----------\r\n  const [cards, setCards] = useState([]);\r\n  const [liked, setLiked] = useState(false);\r\n  const [savedMovies, setSavedMovies] = useState([]);\r\n  const [visibleSavedMovies, setVisibleSavedMovies] = useState([]);\r\n\r\n  const [errorFound, setErrorFound] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [cardsVisible, setCardsVisible] = useState(16);\r\n\r\n  // ---------- ВАЛИДАЦИЯ ----------\r\n\r\n  // Валидация форм регистрации, логина и редактирования профиля\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password,setPassword] = useState('');\r\n\r\n  const [nameInvalid, setNameInvalid] = useState(false);\r\n  const [emailInvalid, setEmailInvalid] = useState(false);\r\n  const [passwordInvalid,setPasswordInvalid] = useState(false);\r\n\r\n  const [nameError, setNameError] = useState(`Поле \"Имя\" не может быть пустым`);\r\n  const [emailError, setEmailError] = useState(`Поле \"E-mail\" не может быть пустым`);\r\n  const [passwordError,setPasswordError] = useState(`Поле \"Пароль\" не может быть пустым`);\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [blockForm, setBlockForm] = useState(false);\r\n  const [loginError, setLoginError] = useState('');\r\n  const [registerError, setRegisterError] = useState('');\r\n  const [editMessage, setEditMessage] = useState('');\r\n  const [editError, setEditError] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editFormValid, setEditFormValid] = useState(true);\r\n  // Валидация формы поиска фильмов\r\n  const [filmInputSearch, setFilmInputSearch] = useState('');\r\n  const [filmInputSearchInvalid, setFilmInputSearchInvalid] = useState(false);\r\n  const [filmInputSearchError, setFilmInputSearchError] = useState('Нужно ввести ключевое слово');\r\n  const [filterCheckBoxOn, setFilterCheckBoxOn] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    setWindowWidth(Dimensions.get('window').width\r\n  )}, false);\r\n\r\n  useEffect(() => {\r\n    if(windowWidth > 1281) {\r\n      setCardsVisible(16)\r\n    }\r\n    if(windowWidth > 769 && windowWidth < 1280 ) {\r\n      setCardsVisible(12)\r\n    }\r\n    if(windowWidth > 481 && windowWidth < 768) {\r\n      setCardsVisible(8)\r\n    }\r\n    if(windowWidth > 50 && windowWidth < 480) {\r\n      setCardsVisible(5)\r\n    }\r\n    if (localStorage.getItem(\"savedMovies\")) setSavedMovies(JSON.parse(localStorage.getItem(\"savedMovies\")))\r\n  },[windowWidth])\r\n\r\n  useEffect(() => {\r\n    getRequestedMovies(filmInputSearch);\r\n    setVisibleSavedMovies(findFilms((localStorage.getItem('savedMovies') ? JSON.parse(localStorage.getItem('savedMovies')) : []), filmInputSearch));\r\n  }, [filterCheckBoxOn]);\r\n\r\n  useEffect(() => {\r\n    setVisibleSavedMovies(findFilms((localStorage.getItem('savedMovies') ? JSON.parse(localStorage.getItem('savedMovies')) : []), filmInputSearch));\r\n    // если у пользователя есть токен в localStorage,\r\n    // функция проверит валидность токена\r\n    // и обновит данные пользователя\r\n    function tokenCheck() {\r\n      if (localStorage.getItem('token')) {\r\n        // авторизуем пользователя\r\n        setIsLogged(true);\r\n        // CurrentUser\r\n        setCurrentUser(JSON.parse(localStorage.getItem('currentUser')));\r\n        setName((JSON.parse(localStorage.getItem('currentUser'))).name);\r\n        setEmail((JSON.parse(localStorage.getItem('currentUser'))).email);\r\n      }\r\n    }\r\n    //if (localStorage.getItem('allMovies')) setCards(JSON.parse(localStorage.getItem('allMovies')));\r\n    if (localStorage.getItem('savedMovies'))  setVisibleSavedMovies(JSON.parse(localStorage.getItem('savedMovies')));\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  const getSavedFilms = () => {\r\n    setVisibleSavedMovies(findFilms((localStorage.getItem('savedMovies') ? JSON.parse(localStorage.getItem('savedMovies')) : []), filmInputSearch));\r\n    setIsLoading(false);\r\n  }\r\n  const findFilms = (films, name) => {\r\n    if (name === \"\") {\r\n      return films\r\n    } else {\r\n      return filterMovies(films)\r\n    }\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    switch (e.target.name) {\r\n      case 'email': setEmailInvalid(true);\r\n        break\r\n      case 'password': setPasswordInvalid(true);\r\n        break\r\n      case 'name': setNameInvalid(true);\r\n        break\r\n      case 'filmInput': setFilmInputSearchInvalid(true);\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const emailHandler = (e) => {\r\n    /*if (e.key.length === 1 )\r\n      setEmail(email + e.key)\r\n    if (e.keyCode === 8 || e.keyCode === 46) {\r\n      setEmail(email.slice(0,email.length-1))\r\n    }*/\r\n    setEmail(e.target.value);\r\n    const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{1,}))$/;\r\n    if (!emailRegExp.test(String(e.target.value).toLowerCase())) {\r\n      setEmailError('Некорректный E-mail');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  }\r\n\r\n  const passwordHandler = (e) => {\r\n    setPassword(e.target.value);\r\n\r\n    if (e.target.value.length < 8) {\r\n      setPasswordError('Пароль не менее 8 символов');\r\n      if(!e.target.value) {\r\n        setPasswordError('Пароль не может быть пустым');\r\n      }\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  }\r\n\r\n  const nameHandler = (e) => {\r\n    setName(e.target.value);\r\n    if(e.target.value.length < 2 || e.target.value.length > 30) {\r\n      setNameError(`Поле \"Имя\" должно содержать от 2 до 30 символов`);\r\n      if(!e.target.value) {\r\n        setNameError(`Поле \"Имя\" не может быть пустым`);\r\n      } else {\r\n        setNameError('');\r\n      }\r\n    }\r\n  }\r\n\r\n  function onRegister({name, email, password}) {\r\n    setIsLoading(true)\r\n    mainApi.register(name, email, password)\r\n      .then((data) => {\r\n        if(data.data) {\r\n          setCurrentUser({email: data.data.email, name: data.data.name});\r\n          setBlockForm(false);\r\n          localStorage.setItem('currentUser', JSON.stringify({email: data.data.email, name: data.data.name}));\r\n          setIsLoading(false)\r\n          history.push('/signin');\r\n        }\r\n        setIsLoading(false)\r\n        setRegisterError(data.message);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  // функция обработки кнопки сабмита формы регистрации\r\n  function handlerRegisterSubmit(e) {\r\n    e.preventDefault();\r\n    setBlockForm(true);\r\n    onRegister({name, email, password});\r\n  }\r\n\r\n  function onLogin({email, password}) {\r\n    setIsLoading(true)\r\n    mainApi.authorize(email, password)\r\n      .then((data) => {\r\n        if(data.token) {\r\n          setLoginError('');\r\n          setIsLogged(true);\r\n          setBlockForm(false);\r\n          localStorage.setItem('token', data.token);\r\n          setIsLoading(false)\r\n          history.push('/movies');\r\n        }\r\n        setLoginError(data.message);\r\n        setIsLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  // функция обработки кнопки сабмита формы логина\r\n  function handlerLoginSubmit(e) {\r\n    e.preventDefault();\r\n    setBlockForm(true);\r\n    onLogin({email, password});\r\n  }\r\n\r\n  function handleEditProfileBtn (e) {\r\n    e.preventDefault();\r\n    if (isEditing) {\r\n      if (editFormValid) {\r\n        setIsLoading(true);\r\n        mainApi.editUserInfo({ name, email }, localStorage.getItem('token'))\r\n        .then((data) => {\r\n          if (data.email && data.name) {\r\n            setIsEditing(false);\r\n            setCurrentUser({email: data.email, name: data.name});\r\n            localStorage.setItem(\"currentUser\", JSON.stringify({email: data.email, name: data.name}));\r\n            setEditError(false);\r\n            setEditMessage('Данные успешно обновлены');\r\n            setIsLoading(false);\r\n          } else {\r\n            setIsEditing(false);\r\n          }\r\n          setIsEditing(false);\r\n        })\r\n        .catch((err) => {\r\n          setEditMessage('Не удалось обновить данные о пользователе');\r\n          setEditError(true);\r\n          setIsEditing(false);\r\n          setIsLoading(false);\r\n          console.log(err);\r\n        })\r\n      }\r\n    } else {\r\n      setIsEditing(true);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function onSignOut() {\r\n    localStorage.removeItem('token');\r\n    setIsLogged(false);\r\n    history.push('/');\r\n  }\r\n\r\n  function getRequestedMovies(filmReq) {\r\n    if (filmReq) {\r\n      setIsLoading(true);\r\n      if (localStorage.getItem('allMovies') && JSON.parse(localStorage.getItem('allMovies')).length !== 0) {\r\n        setCards(filterMovies(JSON.parse(localStorage.getItem('allMovies'))));\r\n      } else {\r\n        moviesApi.getInitialMovies(filmInputSearch,localStorage.getItem('token'))\r\n        .then((data) => {\r\n          localStorage.setItem('allMovies', JSON.stringify(data));\r\n          setCards(filterMovies(data))\r\n        })\r\n        .catch((err) => {\r\n          setErrorFound(true);\r\n          setIsLoading(false);\r\n          console.log(err);\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  function filterMovies(data){\r\n    const foundMovies = data.filter((card) => {\r\n      if (filterCheckBoxOn) {\r\n        if (card.duration <= 40) {\r\n          if (card.nameRU) {\r\n            if(card.nameRU.trim().toLowerCase().includes(filmInputSearch.trim().toLowerCase())) {\r\n              return card;\r\n            }\r\n          }\r\n          if (card.nameEN) {\r\n            if (card.nameEN.trim().toLowerCase().includes(filmInputSearch.trim().toLowerCase())) {\r\n              return card;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (card.nameRU) {\r\n          if(card.nameRU.trim().toLowerCase().includes(filmInputSearch.trim().toLowerCase())) {\r\n            return card;\r\n          }\r\n        }\r\n        if (card.nameEN) {\r\n          if (card.nameEN.trim().toLowerCase().includes(filmInputSearch.trim().toLowerCase())) {\r\n            return card;\r\n          }\r\n        }\r\n      }\r\n      return foundMovies;\r\n    })\r\n\r\n    setIsLoading(false);\r\n    if(windowWidth > 1279) {\r\n      setCardsVisible(16)\r\n    }\r\n    if(windowWidth > 767 && windowWidth < 1279 ) {\r\n      setCardsVisible(12)\r\n    }\r\n    if(windowWidth > 480 && windowWidth < 767) {\r\n      setCardsVisible(8)\r\n    }\r\n    if(windowWidth > 320 && windowWidth < 480) {\r\n      setCardsVisible(5)\r\n    }\r\n    return foundMovies\r\n  }\r\n  // Обработчик инпута поисковика фильмов\r\n  function hadnlefilmInputSearchChange(e) {\r\n    setFilmInputSearch(e.target.value);\r\n  }\r\n\r\n  // Обработчик сабмита в поисковике фильмов\r\n  function onSearchMoviesFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!filmInputSearch) {\r\n      setFilmInputSearchInvalid(true);\r\n      setFilmInputSearchError('Нужно ввести ключевое слово');\r\n    }\r\n    if (filmInputSearch) {\r\n      const filmInputSearchRegExp = /[A-Za-zА-Яа-яЁё0-9 -]{1,40}/;\r\n\r\n      if(!filmInputSearchRegExp.test(filmInputSearch.toLowerCase())) {\r\n        setFilmInputSearchInvalid(true);\r\n        setFilmInputSearchError('Введены недопустимые символы');\r\n        return\r\n      } else {\r\n        setFilmInputSearchError('');\r\n        setFilmInputSearchInvalid(false);\r\n        setFirstSearch(true);\r\n        if (!isOnSaved) {\r\n          getRequestedMovies(filmInputSearch);\r\n        } else {\r\n          getSavedFilms();\r\n        }\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  // Обработчик лайка фильма - сохранение фильма\r\n  function likeMovie(movie, func) {\r\n    mainApi.addMovieLike(movie,localStorage.getItem('token'))\r\n      .then((data) => {\r\n        if (data) {\r\n          const savedMoviesT = savedMovies;\r\n          data.id = data.movieId;\r\n          savedMoviesT.push(data);\r\n          func();\r\n          setSavedMovies(savedMoviesT);\r\n          localStorage.setItem('savedMovies', JSON.stringify(savedMoviesT));\r\n        }\r\n      })\r\n  }\r\n\r\n  // Обработчик дизлайка фильма - удаление фильма\r\n  function dislikeMovie(movie, func) {\r\n    mainApi.removeMovieLike(movie.id,localStorage.getItem('token'))\r\n      .then((data) => {\r\n        if (data) {\r\n          let savedMoviesList = savedMovies\r\n          savedMoviesList = savedMoviesList.filter((elem)=>{\r\n            if (elem.id === movie.id) {\r\n              return false;\r\n            }\r\n            return true;\r\n          })\r\n          func();\r\n          setSavedMovies(savedMoviesList);\r\n          localStorage.setItem('savedMovies', JSON.stringify(savedMoviesList));\r\n        }\r\n      })\r\n  }\r\n\r\n  // function checkMovies(movies, savedMovies) {\r\n  //   return movies.filter((el) => {\r\n  //     for (let i = 0; i < savedMovies.length; i++) {\r\n  //       if (unification(el) && unification(savedMovies[i]))\r\n  //         if (el.id === savedMovies[i].id){\r\n  //           return false\r\n  //         }\r\n  //     }\r\n  //     return true\r\n  //   })\r\n  // }\r\n\r\n  // function unification(cards) {\r\n  //   try {\r\n  //     if (cards.id) {\r\n  //       return true\r\n  //     }\r\n  //     return false\r\n  //   } catch {\r\n  //     return false\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"app\">\r\n        <Switch>\r\n\r\n          <Route exact path='/'>\r\n            <Header\r\n              windowWidth={windowWidth}\r\n              isLogged={isLogged}\r\n              setFilterCheckBoxOn={setFilterCheckBoxOn}\r\n            />\r\n            <Main/>\r\n            <Footer/>\r\n          </Route>\r\n\r\n          <Route exact path='/signup'>\r\n          {(isLogged === true)\r\n            ? <Redirect to='/'></Redirect>\r\n            : <Route exact path='/signup'>\r\n                <Header\r\n                  windowWidth={windowWidth}\r\n                  isLogged={isLogged}\r\n                  setFilterCheckBoxOn={setFilterCheckBoxOn}\r\n                />\r\n                <Register\r\n                  name={name}\r\n                  nameInvalid={nameInvalid}\r\n                  nameError={nameError}\r\n                  nameHandler={nameHandler}\r\n\r\n                  email={email}\r\n                  emailInvalid={emailInvalid}\r\n                  emailError={emailError}\r\n                  emailHandler={emailHandler}\r\n\r\n                  password={password}\r\n                  passwordInvalid={passwordInvalid}\r\n                  passwordError={passwordError}\r\n                  passwordHandler={passwordHandler}\r\n\r\n                  formValid={formValid}\r\n                  setFormValid={setFormValid}\r\n                  blurHandler={blurHandler}\r\n\r\n                  onRegister={onRegister}\r\n                  handlerRegisterSubmit={handlerRegisterSubmit}\r\n                  registerError = {registerError}\r\n                  blockForm={blockForm}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Route>\r\n          }\r\n          </Route>\r\n\r\n          <Route exact path='/signin'>\r\n          {(isLogged === true)\r\n            ? <Redirect to='/'></Redirect>\r\n            : <Route exact path='/signin'>\r\n                <Header\r\n                  windowWidth={windowWidth}\r\n                  isLogged={isLogged}\r\n                  setFilterCheckBoxOn={setFilterCheckBoxOn}\r\n                />\r\n                <Login\r\n                  email={email}\r\n                  emailInvalid={emailInvalid}\r\n                  emailError={emailError}\r\n                  emailHandler={emailHandler}\r\n\r\n                  password={password}\r\n                  passwordInvalid={passwordInvalid}\r\n                  passwordError={passwordError}\r\n                  passwordHandler={passwordHandler}\r\n\r\n                  formValid={formValid}\r\n                  setFormValid={setFormValid}\r\n                  blurHandler={blurHandler}\r\n\r\n                  onLogin={onLogin}\r\n                  handlerLoginSubmit={handlerLoginSubmit}\r\n                  loginError={loginError}\r\n                  blockForm={blockForm}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Route>\r\n          }\r\n          </Route>\r\n\r\n          <ProtectedRoute path='/movies' isLogged={isLogged}\r\n            components={[\r\n              Header,\r\n              Movies,\r\n              Footer\r\n            ]}\r\n            properties={[\r\n              {\r\n                \"setFilterCheckBoxOn\": setFilterCheckBoxOn,\r\n                \"windowWidth\":windowWidth,\r\n                \"isLogged\":isLogged,\r\n              },\r\n              {\r\n                \"setIsOnSaved\":setIsOnSaved,\r\n                \"cards\":cards,\r\n                \"errorFound\":errorFound,\r\n                \"isLoading\":isLoading,\r\n                \"cardsVisible\":cardsVisible,\r\n                \"setCardsVisible\":setCardsVisible,\r\n                \"allMovies\":cards,\r\n                \"setAllMovies\":setCards,\r\n                \"savedMovies\": savedMovies,\r\n                \"setSavedMovies\": setSavedMovies,\r\n                \"liked\":liked,\r\n                \"setLiked\":setLiked,\r\n                \"likeMovie\":likeMovie,\r\n                \"dislikeMovie\":dislikeMovie,\r\n                \"firstSearch\":firstSearch,\r\n                \"windowWidth\":windowWidth,\r\n                // SearchForm\r\n                \"filterCheckBoxOn\": filterCheckBoxOn,\r\n                \"setFilterCheckBoxOn\":setFilterCheckBoxOn,\r\n                \"hadnlefilmInputSearchChange\":hadnlefilmInputSearchChange,\r\n                \"onSearchMoviesFormSubmit\":onSearchMoviesFormSubmit,\r\n                \"filmInputSearchInvalid\":filmInputSearchInvalid,\r\n                \"setFilmInputSearchInvalid\":setFilmInputSearchInvalid,\r\n                \"filmInputSearchError\":filmInputSearchError,\r\n                \"setFilmInputSearchError\":setFilmInputSearchError,\r\n                \"blurHandler\": blurHandler,\r\n              },\r\n              {}\r\n            ]}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/saved-movies' isLogged={isLogged}\r\n            components={[\r\n              Header,\r\n              SavedMovies,\r\n              Footer\r\n            ]}\r\n            properties={[\r\n              {\r\n                \"windowWidth\":windowWidth,\r\n                \"isLogged\":isLogged,\r\n                \"setFilterCheckBoxOn\": setFilterCheckBoxOn,\r\n              },\r\n              {\r\n                \"setIsOnSaved\":setIsOnSaved,\r\n                \"savedMovies\":savedMovies,\r\n                \"setSavedMovies\":setSavedMovies,\r\n                \"allMovies\":cards,\r\n                \"cardsVisible\":cardsVisible,\r\n                \"setCardsVisible\":setCardsVisible,\r\n                \"setAllMovies\":setCards,\r\n                \"likeMovie\":likeMovie,\r\n                \"dislikeMovie\":dislikeMovie,\r\n                // SearchForm\r\n                \"filterCheckBoxOn\":filterCheckBoxOn,\r\n                \"setFilterCheckBoxOn\":setFilterCheckBoxOn,\r\n                \"hadnlefilmInputSearchChange\":hadnlefilmInputSearchChange,\r\n                \"onSearchMoviesFormSubmit\":onSearchMoviesFormSubmit,\r\n                \"filmInputSearchInvalid\":filmInputSearchInvalid,\r\n                \"setFilmInputSearchInvalid\":setFilmInputSearchInvalid,\r\n                \"filmInputSearchError\":filmInputSearchError,\r\n                \"setFilmInputSearchError\":setFilmInputSearchError,\r\n                \"blurHandler\": blurHandler,\r\n              },\r\n              {}\r\n            ]}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/profile' isLogged={isLogged}\r\n            components={[\r\n              Header,\r\n              Profile\r\n            ]}\r\n            properties={[\r\n              {\r\n                \"windowWidth\":windowWidth,\r\n                \"isLogged\":isLogged,\r\n                \"setFilterCheckBoxOn\": setFilterCheckBoxOn,\r\n              },\r\n              {\r\n                \"currentUser\": currentUser,\r\n                \"name\": name,\r\n                \"nameInvalid\": nameInvalid,\r\n                \"nameError\": nameError,\r\n                \"nameHandler\": nameHandler,\r\n\r\n                \"email\": email,\r\n                \"emailInvalid\": emailInvalid,\r\n                \"emailError\": emailError,\r\n                \"emailHandler\": emailHandler,\r\n\r\n                \"isEditing\": isEditing,\r\n                \"editFormValid\": editFormValid,\r\n                \"setEditFormValid\": setEditFormValid,\r\n\r\n                \"blurHandler\": blurHandler,\r\n                \"handleEditProfileBtn\": handleEditProfileBtn,\r\n                \"onSignOut\":onSignOut,\r\n                \"editMessage\": editMessage,\r\n                \"editError\": editError,\r\n                \"isLoading\": isLoading,\r\n              }\r\n            ]}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/*' isLogged={isLogged}\r\n            components={[NotFound]}\r\n            properties={[{}]}\r\n          />\r\n\r\n        </Switch>\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const BASE__URL = 'https://api.nomoreparties.co/beatfilm-movies';\r\n\r\nexport const getInitialMovies = (filmReq) => {\r\n  return fetch(`${BASE__URL}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n  .then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n  })\r\n  .then((data) => {\r\n    data.map((card) => {\r\n      if (card.image) {\r\n        card.image.url = \"https://api.nomoreparties.co\" + card.image.url;\r\n      } else {\r\n        card.image = {url: \"\"};\r\n      }\r\n      return card\r\n    })\r\n    return data\r\n  })\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}